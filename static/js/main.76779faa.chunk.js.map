{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/Feedback-options/Feedback-options.js","components/Section/Section.js","App.js","index.js","components/Feedback-options/Feedback-options.module.css","components/Statistics/Statistics.module.css"],"names":["Notification","message","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","className","styles","wrap","list","FeedbackOptions","options","goodLeaveFeedback","neutralLeaveFeedback","badLeaveFeedback","type","onClick","button","Section","heading","children","App","state","props","initialGood","initialNeutral","initialBad","handleGoodFeedbackClick","setState","prevState","handleNeutralFeedbackClick","handleBadFeedbackClick","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","percentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76779faa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({message}) => (\n    <>\n        <p>{message}</p>\n    </>\n);\n\nNotification.defaultProps = {\n    message: ''\n};\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport styles from './Statistics.module.css'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n    <>\n        <h2>Statistic</h2>\n\n        {total ?\n            (\n                <div className={styles.wrap}>\n                    <ul className={styles.list}>\n                        <li>Good: {good}</li>\n                        <li>Neutral: {neutral}</li>\n                        <li>Bad: {bad}</li>\n                    </ul>\n        \n                    <p>Total: {total}</p>\n                    <p>Positive feetback: {positivePercentage}%</p>\n                </div>\n            )\n            : <Notification message=\"No feedback given\" />\n        }\n    </>\n);\n\nStatistics.defaultProps = {\n    total: 0,\n    positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Feedback-options.module.css';\n\nconst FeedbackOptions = ({\n    options: { good, neutral, bad },\n    goodLeaveFeedback,\n    neutralLeaveFeedback,\n    badLeaveFeedback\n}) => (\n    <div>\n        <button\n            type=\"button\"\n            onClick={goodLeaveFeedback}\n            className={styles.button}>{good}\n        </button>\n        <button\n            type=\"button\"\n            onClick={neutralLeaveFeedback}\n            className={styles.button}>{neutral}\n        </button>\n        <button\n            type=\"button\"\n            onClick={badLeaveFeedback}\n            className={styles.button}>{bad}\n        </button>\n    </div>\n);\n\nFeedbackOptions.defaultProps = {\n    good: \"\",\n    neutral: \"\",\n    bad: \"\",\n}\n\nFeedbackOptions.propTypes = {\n    good: PropTypes.string.isRequired,\n    neutral: PropTypes.string.isRequired,\n    bad: PropTypes.string.isRequired,\n};\n\nexport default FeedbackOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ heading ,children }) => (\n    <section>\n        <h2>{heading}</h2>\n        {children}\n    </section>\n);\n\nSection.defaultProps = {\n    heading: ''\n};\n\nSection.propTypes = {\n    heading: PropTypes.string.isRequired,\n};\n\nexport default Section;\n\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './components/Feedback-options';\nimport Section from './components/Section';\nimport './styles.css';\n\nclass App extends Component {\n    static defaultProps = {\n        initialGood: 0,\n        initialNeutral: 0,\n        initialBad: 0,\n    };\n\n    static propTypes = {\n        state: PropTypes.objectOf(PropTypes.number.isRequired),\n        handleGoodFeedbackClick: PropTypes.func,\n        handleNeutralFeedbackClick: PropTypes.func,\n        handleBadFeedbackClick: PropTypes.func,\n        countTotalFeedback: PropTypes.func,\n        countPositiveFeedbackPercentage: PropTypes.func,\n        render: PropTypes.func,\n    };\n\n    state = {\n        good: this.props.initialGood,\n        neutral: this.props.initialNeutral,\n        bad: this.props.initialBad,\n    };\n\n    handleGoodFeedbackClick = () => {\n        this.setState(prevState => ({\n            good: prevState.good + 1\n        }));\n    };\n\n    handleNeutralFeedbackClick = () => {\n        this.setState(prevState => ({\n            neutral: prevState.neutral + 1\n        }))\n    };\n\n    handleBadFeedbackClick = () => {\n        this.setState(prevState => ({\n            bad: prevState.bad + 1\n        }))\n    };\n\n    countTotalFeedback = () => {\n        const arrStateValue = Object.values(this.state);\n        \n        const total = arrStateValue.reduce((acc, el) => acc + el);\n        return total;\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        const { good } = this.state;\n        const percentage = good * 100 / this.countTotalFeedback();\n        return Math.ceil(percentage);\n    };\n\n    render() {\n        const { good, neutral, bad } = this.state;\n\n        return (\n            <div className=\"container\">\n                <Section heading=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={{\n                            good: \"Good\",\n                            neutral: \"Neutral\",\n                            bad: \"Bad\"\n                        }}\n                        goodLeaveFeedback={this.handleGoodFeedbackClick}\n                        neutralLeaveFeedback={this.handleNeutralFeedbackClick}\n                        badLeaveFeedback={this.handleBadFeedbackClick}\n                    />\n                    \n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={this.countTotalFeedback()}\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\n                    />\n                </Section>\n            </div>\n        )\n    };\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback-options_button__RjnHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"wrap\":\"Statistics_wrap__1eluO\"};"],"sourceRoot":""}